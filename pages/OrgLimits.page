<apex:page controller="RESTLimitResource">

    <style>
        .container {
            margin: 5px;
            text-align: center;
        }
        .gauge {
            border: 1px solid black;
            display: inline-block;
        }
    </style>

    <div class="container">
        <div id="gg1" class="gauge"></div>
        <div id="gg2" class="gauge"></div>
        <div id="gg3" class="gauge"></div>
        <div id="gg4" class="gauge"></div>
        <div id="gg5" class="gauge"></div>
        <div id="gg6" class="gauge"></div>
        <div id="gg7" class="gauge"></div>
        <div id="gg8" class="gauge"></div>
        <div id="gg9" class="gauge"></div>
        <div id="gg10" class="gauge"></div>
        <div id="gg11" class="gauge"></div>
        <div id="gg12" class="gauge"></div>
        <div id="gg13" class="gauge"></div>
        <div id="gg14" class="gauge"></div>
        <div id="gg15" class="gauge"></div>
        <div id="gg16" class="gauge"></div>
        <div id="gg17" class="gauge"></div>
        <div id="gg18" class="gauge"></div>
        <div id="gg19" class="gauge"></div>
        <div style="display: none;"><input type="text" id="inJSON" value="{!JSONtext}"/></div> 
    </div>
    <script src="{!$Resource.raphael}"></script>
    <script src="{!$Resource.justgage}"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function(event) {
            var sJSON = document.getElementById("inJSON").value;
            var obj = JSON.parse(sJSON);
            var dflt = {
                min: 0,
                gaugeWidthScale: 0.6,
                counter: true,
                hideInnerShadow: true
            }
            var gg1 = new JustGage({
                id: 'gg1',
                value: obj.DailyApiRequests.Max - obj.DailyApiRequests.Remaining,
                max: obj.DailyApiRequests.Max,
                title: 'Daily API Requests',
                defaults: dflt
            });
            var gg2 = new JustGage({
                id: 'gg2',
                value: obj.DailyBulkApiRequests.Max - obj.DailyBulkApiRequests.Remaining,
                max: obj.DailyBulkApiRequests.Max,
                title: 'Daily Bulk API Requests',
                defaults: dflt
            });
            var gg3 = new JustGage({
                id: 'gg3',
                value: obj.DailyStreamingApiEvents.Max - obj.DailyStreamingApiEvents.Remaining,
                max: obj.DailyStreamingApiEvents.Max,
                title: 'Daily PushTopic Streaming Events',
                defaults: dflt
            });
            var gg4 = new JustGage({
                id: 'gg4',
                value: obj.DailyGenericStreamingApiEvents.Max - obj.DailyGenericStreamingApiEvents.Remaining,
                max: obj.DailyGenericStreamingApiEvents.Max,
                title: 'Daily Generic Streaming Events',
                defaults: dflt
            });
            var gg5 = new JustGage({
                id: 'gg5',
                value: obj.StreamingApiConcurrentClients.Max - obj.StreamingApiConcurrentClients.Remaining,
                max: obj.StreamingApiConcurrentClients.Max,
                title: 'Concurrent Streaming Clients',
                defaults: dflt
            });
            var gg6 = new JustGage({
                id: 'gg6',
                value: obj.DataStorageMB.Max - obj.DataStorageMB.Remaining,
                max: obj.DataStorageMB.Max,
                title: 'Data Storage (MB)',
                defaults: dflt
            });
            var gg7 = new JustGage({
                id: 'gg7',
                value: obj.FileStorageMB.Max - obj.FileStorageMB.Remaining,
                max: obj.FileStorageMB.Max,
                title: 'File Storage (MB)',
                defaults: dflt
            });
            var gg8 = new JustGage({
                id: 'gg8',
                value: obj.DailyAsyncApexExecutions.Max - obj.DailyAsyncApexExecutions.Remaining,
                max: obj.DailyAsyncApexExecutions.Max,
                title: 'Daily Async Apex Execs',
                defaults: dflt
            });
            var gg9 = new JustGage({
                id: 'gg9',
                value: obj.MassEmail.Max - obj.MassEmail.Remaining,
                max: obj.MassEmail.Max,
                title: 'Daily Mass Emails',
                defaults: dflt
            });
            var gg10 = new JustGage({
                id: 'gg10',
                value: obj.SingleEmail.Max - obj.SingleEmail.Remaining,
                max: obj.SingleEmail.Max,
                title: 'Daily Single Emails',
                defaults: dflt
            });
            var gg11 = new JustGage({
                id: 'gg11',
                value: obj.DailyWorkflowEmails.Max - obj.DailyWorkflowEmails.Remaining,
                max: obj.DailyWorkflowEmails.Max,
                title: 'Daily Workflow Emails',
                defaults: dflt
            });
            var gg12 = new JustGage({
                id: 'gg12',
                value: obj.HourlyTimeBasedWorkflow.Max - obj.HourlyTimeBasedWorkflow.Remaining,
                max: obj.HourlyTimeBasedWorkflow.Max,
                title: 'Hourly Time Based Workflow',
                defaults: dflt
            });
            var gg13 = new JustGage({
                id: 'gg13',
                value: obj.HourlySyncReportRuns.Max - obj.HourlySyncReportRuns.Remaining,
                max: obj.HourlySyncReportRuns.Max,
                title: 'Hourly Sync Reports',
                defaults: dflt
            });
            var gg14 = new JustGage({
                id: 'gg14',
                value: obj.ConcurrentSyncReportRuns.Max - obj.ConcurrentSyncReportRuns.Remaining,
                max: obj.ConcurrentSyncReportRuns.Max,
                title: 'Concurrent Sync Reports',
                defaults: dflt,
                label: 'test'
            });
            var gg15 = new JustGage({
                id: 'gg15',
                value: obj.HourlyAsyncReportRuns.Max - obj.HourlyAsyncReportRuns.Remaining,
                max: obj.HourlyAsyncReportRuns.Max,
                title: 'Hourly Async Reports',
                defaults: dflt
            });
            var gg16 = new JustGage({
                id: 'gg16',
                value: obj.ConcurrentAsyncGetReportInstances.Max - obj.ConcurrentAsyncGetReportInstances.Remaining,
                max: obj.ConcurrentAsyncGetReportInstances.Max,
                title: 'Concurrent Async Reports',
                defaults: dflt
            });
            var gg17 = new JustGage({
                id: 'gg17',
                value: obj.HourlyDashboardRefreshes.Max - obj.HourlyDashboardRefreshes.Remaining,
                max: obj.HourlyDashboardRefreshes.Max,
                title: 'Hourly Dashboard Refreshes',
                defaults: dflt
            });
            var gg18 = new JustGage({
                id: 'gg18',
                value: obj.HourlyDashboardResults.Max - obj.HourlyDashboardResults.Remaining,
                max: obj.HourlyDashboardResults.Max,
                title: 'Hourly Dashboard Results',
                defaults: dflt
            });
            var gg19 = new JustGage({
                id: 'gg19',
                value: obj.HourlyDashboardStatuses.Max - obj.HourlyDashboardStatuses.Remaining,
                max: obj.HourlyDashboardStatuses.Max,
                title: 'Hourly Dashboard Statuses',
                defaults: dflt
            });
        });
  </script>

</apex:page>